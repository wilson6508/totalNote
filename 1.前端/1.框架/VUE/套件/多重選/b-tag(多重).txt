<template>
<div>
<b-container class="mt-5">

    <b-form-tags id="tags-with-dropdown" v-model="value" no-outer-focus class="mb-2">
    <template v-slot="{ tags, disabled, addTag, removeTag }">
    <b-row>
    <b-col cols="6">
          <b-dropdown size="sm" text="快速搜尋" class="mr-3">
          <b-dropdown-form @submit.stop.prevent="() => {}">
          <b-form-group label="" label-for="tag-search-input" label-cols-md="auto" class="mb-0" label-size="sm" :description="searchDesc" :disabled="disabled">
          <b-form-input v-model="search" id="tag-search-input" type="search" size="xl" autocomplete="off"></b-form-input>
          </b-form-group>
          </b-dropdown-form>
          <b-dropdown-divider></b-dropdown-divider>
          <b-dropdown-item-button v-for="option in availableOptions" :key="option" @click="onOptionClick({ option, addTag })">{{ option }}</b-dropdown-item-button>
          </b-dropdown>
          <ul v-if="tags.length > 0" class="list-inline d-inline-block mb-2">
          <li v-for="tag in tags" :key="tag" class="list-inline-item">
          <b-form-tag @remove="removeTag(tag)" :title="tag" :disabled="disabled" variant="info">{{ tag }}</b-form-tag>
          </li>
          </ul>
    </b-col>
    </b-row>
    </template>
    </b-form-tags>

</b-container>
</div>
</template>

<script>
  export default {
    data() {
      return {
        options: ['Apple', 'Orange', 'Banana', 'Lime', 'Peach', 'Chocolate', 'StrawberryStrawberryStrawberry'],
        search: '',
        value: []
      }
    },
    computed: {
      criteria() { return this.search.trim().toLowerCase(); },
      availableOptions() {
        const criteria = this.criteria
        const options = this.options.filter(opt => this.value.indexOf(opt) === -1)
        if (criteria) {
          return options.filter(opt => opt.toLowerCase().indexOf(criteria) > -1);
        }
        return options;
      },
      searchDesc() {
        if (this.criteria && this.availableOptions.length === 0) {
          return "無相符資料";
        } else {
          return "";
        }
      }
    },
    methods: {
      onOptionClick({ option, addTag }) {
        addTag(option);
        this.search = "";
      }
    }
  }
</script>
