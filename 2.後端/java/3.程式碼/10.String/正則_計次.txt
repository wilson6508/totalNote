package test0902;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Set;
import java.util.TreeSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class A1 {
	public static void main(String[] args) {
		String str0 = "This is a book. That is a pencil. This is good, and that is bad.";
		String oriString = str0.toLowerCase();			//經測試，先將原字串轉成小寫，可以避免一些問題
		Pattern p = Pattern.compile("\\w[^\\.\\,\\s]*");	// \w 數字母底線  \s空白  *零或多次  .any char  //跳脫字元
		Matcher m = p.matcher(oriString);

		Set<String> sortVerb = new TreeSet<String>();//set中的值不允許重複
		ArrayList<String> strArray = new ArrayList<String>();
		while (m.find()) {		//把單字加到集合裡
			strArray.add(m.group());
			sortVerb.add(m.group());
		}
		Integer[] verbCount = new Integer[sortVerb.size()];
		int index = 0;
		for (String s : sortVerb) {
			int count = 0;
			for (String sr : strArray) {
				if (s.equalsIgnoreCase(sr))
					count++;		//計算單字出現的次數
			}
			verbCount[index++] = count;		//TreeSet第一個元素(單字)出現的次數就是verbCount[0],以此類推
		}
		ArrayList<A1a> al = new ArrayList<>();
		Object[] printStr = sortVerb.toArray();
		for (int i = 0; i < sortVerb.size(); i++) {
			String str1 = printStr[i].toString();
			String str2 = (new Character(str1.charAt(0)).toString().toUpperCase()
					+ str1.substring(1, str1.length()).toLowerCase() + ":" + verbCount[i] + "次");
			A1a e = new A1a(str2, verbCount[i]);		//用字串準備輸出的格式，並以此產生物件，此物件的另一個欄位是次數
			al.add(e);
		}
		Comparator<A1a> c = (m1, m2) -> m2.times - m1.times;
		Collections.sort(al, c);		//讓次數由大到小
		for (A1a o : al)
			System.out.println(o);
	}
}
class A1a {
	String str;	int times;
	public A1a(String str, int times) {
		super();
		this.str = str;
		this.times = times;
	}
	@Override
	public String toString() {
		return str;
	}
}
