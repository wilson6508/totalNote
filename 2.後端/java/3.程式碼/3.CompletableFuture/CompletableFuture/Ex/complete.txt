https://stackoverflow.com/questions/40393489/java-completablefuture-complete-block

------------------------------------------whenComplete-------------------------------------------------------
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutionException;
public class Ex4 {
    public static void main(String[] args) throws ExecutionException, InterruptedException {
        CompletableFuture<String> future = new CompletableFuture<>();
//        CompletableFuture<String> future = CompletableFuture.supplyAsync(Ex4::demo);
//        future.whenCompleteAsync((r, t) -> {
        future.whenComplete((r, t) -> {
            System.out.println(r);
            System.out.println("before sleep, executed in thread " + Thread.currentThread());
            try {
                Thread.sleep(3000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println("after sleep, executed in thread " + Thread.currentThread());
        });
        System.out.println(Thread.currentThread());
        future.complete("隨便字串");
        System.out.println("done");
    }
    public static String demo() {
        return "QQQ";
    }
}
-------------------------------------------whenCompleteAsync------------------------------------------------------
import java.util.concurrent.CompletableFuture;
public class Ex5 {
    public static void main(String[] args) throws Exception {
        CompletableFuture<String> future = new CompletableFuture<>();
        CompletableFuture<?> done = future.whenCompleteAsync((r, t) -> {
            System.out.println("before sleep, executed in thread " + Thread.currentThread());
            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println("after sleep, executed in thread " + Thread.currentThread());
        });
        System.out.println(Thread.currentThread());
        future.complete("completed");
        System.out.println("done");
        done.get();
    }
}
-------------------------------------------------------------------------------------------------